#!/usr/bin/env python3

import argparse

def main():
    parser = argparse.ArgumentParser(description='FCCAnalyses parser')
    subparsers = parser.add_subparsers(help='types of running modes', dest='command')
    parser_init      = subparsers.add_parser('init', help="generate a RDataFrame based FCC analysis")
    parser_build     = subparsers.add_parser('build', help='build and install local analysis')
    parser_pin       = subparsers.add_parser('pin', help='pin fccanalyses to the current version of Key4hep stack')
    parser_run       = subparsers.add_parser('run', help="run a RDataFrame based FCC analysis")
    parser_run_final = subparsers.add_parser('final', help="run a RDataFrame based FCC analysis final configuration")
    parser_run_plots = subparsers.add_parser('plots', help="run a RDataFrame based FCC analysis plot configuration")

    import Parsers as fccpars
    fccpars.setup_init_parser(parser_init)
    fccpars.setup_build_parser(parser_build)
    fccpars.setup_pin_parser(parser_pin)
    fccpars.setup_run_parser(parser_run)
    fccpars.setup_run_parser_final(parser_run_final)
    fccpars.setup_run_parser_plots(parser_run_plots)

    args = parser.parse_args()

    if args.command == 'init':
        from FCCAnalysisSetup import setup
        setup(parser)
    elif args.command == 'build':
        from build_analysis import build_analysis
        build_analysis(parser)
    elif args.command == 'pin':
        from pin_analysis import PinAnalysis
        PinAnalysis(parser)
    else:
        from FCCAnalysisRun import run
        run(parser)


if __name__ == "__main__":
    main()
