# Makefile.in generated by automake 1.15 from Makefile.am.
# src/yamlcpp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# tar xf yaml-cpp-0.3.0.tar.gz
# for i in `find yaml-cpp -type f -name "*.h" -o -name "*.cpp"`; do \
#   sed -e 's/namespace YAML/namespace LHAPDF_YAML/' -e 's/YAML::/LHAPDF_YAML::/g' -i; done
# mv yaml-cpp{,.bak} && cp yaml-cpp.bak/include/yaml-cpp . -r && cp yaml-cpp.bak/src/*.{h,cpp} .



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/LHAPDF
pkgincludedir = $(includedir)/LHAPDF
pkglibdir = $(libdir)/LHAPDF
pkglibexecdir = $(libexecdir)/LHAPDF
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/yamlcpp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/compilerflags.m4 $(top_srcdir)/m4/cython.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h \
	$(top_builddir)/include/LHAPDF/Version.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
liblhapdf_yaml_cpp_la_LIBADD =
am_liblhapdf_yaml_cpp_la_OBJECTS =  \
	liblhapdf_yaml_cpp_la-aliasmanager.lo \
	liblhapdf_yaml_cpp_la-emitterutils.lo \
	liblhapdf_yaml_cpp_la-ostream.lo \
	liblhapdf_yaml_cpp_la-simplekey.lo \
	liblhapdf_yaml_cpp_la-binary.lo liblhapdf_yaml_cpp_la-exp.lo \
	liblhapdf_yaml_cpp_la-parser.lo \
	liblhapdf_yaml_cpp_la-singledocparser.lo \
	liblhapdf_yaml_cpp_la-conversion.lo \
	liblhapdf_yaml_cpp_la-iterator.lo \
	liblhapdf_yaml_cpp_la-regex.lo liblhapdf_yaml_cpp_la-stream.lo \
	liblhapdf_yaml_cpp_la-directives.lo \
	liblhapdf_yaml_cpp_la-nodebuilder.lo \
	liblhapdf_yaml_cpp_la-scanner.lo liblhapdf_yaml_cpp_la-tag.lo \
	liblhapdf_yaml_cpp_la-emitfromevents.lo \
	liblhapdf_yaml_cpp_la-node.lo \
	liblhapdf_yaml_cpp_la-scanscalar.lo \
	liblhapdf_yaml_cpp_la-emitter.lo \
	liblhapdf_yaml_cpp_la-nodeownership.lo \
	liblhapdf_yaml_cpp_la-scantag.lo \
	liblhapdf_yaml_cpp_la-emitterstate.lo \
	liblhapdf_yaml_cpp_la-null.lo \
	liblhapdf_yaml_cpp_la-scantoken.lo
liblhapdf_yaml_cpp_la_OBJECTS = $(am_liblhapdf_yaml_cpp_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/config -I$(top_builddir)/include/LHAPDF
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(liblhapdf_yaml_cpp_la_SOURCES)
DIST_SOURCES = $(liblhapdf_yaml_cpp_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(dist_noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CPPFLAGS = 
AM_CXXFLAGS =  -pedantic  -Wall  -Wno-long-long 
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/missing autoconf
AUTOHEADER = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/missing autoheader
AUTOMAKE = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/missing automake-1.15
AWK = gawk
CC = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/gcc -E
CPPFLAGS =  -I/afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/../lhapdf_build/include
CXX = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/g++
CXXCPP = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = /cvmfs/sft.cern.ch/lcg/views/LCG_94/x86_64-slc6-gcc7-opt/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /cvmfs/sft.cern.ch/lcg/releases/binutils/2.28-a983d/x86_64-slc6/bin/ld -m elf_x86_64
LDFLAGS =  -L/afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/../lhapdf_build/lib
LHAPDF_CXX = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/g++
LHAPDF_CXXFLAGS = -O3
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /cvmfs/sft.cern.ch/lcg/releases/binutils/2.28-a983d/x86_64-slc6/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = LHAPDF
PACKAGE_BUGREPORT = lhapdf@projects.hepforge.org
PACKAGE_NAME = LHAPDF
PACKAGE_STRING = LHAPDF 6.2.1
PACKAGE_TARNAME = LHAPDF
PACKAGE_URL = 
PACKAGE_VERSION = 6.2.1
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
PYTHON = /cvmfs/sft.cern.ch/lcg/views/LCG_94/x86_64-slc6-gcc7-opt/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PATH = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/../lhapdf_build/lib/python2.7/site-packages
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SWVERS = 
VERSION = 6.2.1
abs_builddir = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/src/yamlcpp
abs_srcdir = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/src/yamlcpp
abs_top_builddir = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1
abs_top_srcdir = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1
ac_ct_AR = ar
ac_ct_CC = /cvmfs/sft.cern.ch/lcg/releases/gcc/7.3.0-cb1ee/x86_64-slc6/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/LHAPDF
pkgpythondir = ${pythondir}/LHAPDF
prefix = /afs/cern.ch/user/d/dimoulin/FCCAnalyses/Madgraph/LHAPDF-6.2.1/../lhapdf_build
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
EXTRA_DIST = yaml-cpp
noinst_LTLIBRARIES = liblhapdf-yaml-cpp.la
liblhapdf_yaml_cpp_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)
liblhapdf_yaml_cpp_la_SOURCES = \
  aliasmanager.cpp    emitterutils.cpp   ostream.cpp     simplekey.cpp \
  binary.cpp          exp.cpp            parser.cpp      singledocparser.cpp \
  conversion.cpp      iterator.cpp       regex.cpp       stream.cpp \
  directives.cpp      nodebuilder.cpp    scanner.cpp     tag.cpp \
  emitfromevents.cpp  node.cpp           scanscalar.cpp \
  emitter.cpp         nodeownership.cpp  scantag.cpp \
  emitterstate.cpp    null.cpp           scantoken.cpp

dist_noinst_HEADERS = \
  collectionstack.h  iterpriv.h       regeximpl.h        streamcharsource.h \
  directives.h       nodebuilder.h    scanner.h          stream.h \
  emitterstate.h     nodeownership.h  scanscalar.h       stringsource.h \
  emitterutils.h     ptr_stack.h      scantag.h          tag.h \
  exp.h              ptr_vector.h     setting.h          token.h \
  indentation.h      regex.h          singledocparser.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/yamlcpp/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/yamlcpp/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liblhapdf-yaml-cpp.la: $(liblhapdf_yaml_cpp_la_OBJECTS) $(liblhapdf_yaml_cpp_la_DEPENDENCIES) $(EXTRA_liblhapdf_yaml_cpp_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(liblhapdf_yaml_cpp_la_OBJECTS) $(liblhapdf_yaml_cpp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-aliasmanager.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-binary.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-conversion.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-directives.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-emitfromevents.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-emitter.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-emitterstate.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-emitterutils.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-exp.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-iterator.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-node.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-nodebuilder.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-nodeownership.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-null.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-ostream.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-parser.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-regex.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-scanner.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-scanscalar.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-scantag.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-scantoken.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-simplekey.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-singledocparser.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-stream.Plo
include ./$(DEPDIR)/liblhapdf_yaml_cpp_la-tag.Plo

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

liblhapdf_yaml_cpp_la-aliasmanager.lo: aliasmanager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-aliasmanager.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-aliasmanager.Tpo -c -o liblhapdf_yaml_cpp_la-aliasmanager.lo `test -f 'aliasmanager.cpp' || echo '$(srcdir)/'`aliasmanager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-aliasmanager.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-aliasmanager.Plo
#	$(AM_V_CXX)source='aliasmanager.cpp' object='liblhapdf_yaml_cpp_la-aliasmanager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-aliasmanager.lo `test -f 'aliasmanager.cpp' || echo '$(srcdir)/'`aliasmanager.cpp

liblhapdf_yaml_cpp_la-emitterutils.lo: emitterutils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-emitterutils.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterutils.Tpo -c -o liblhapdf_yaml_cpp_la-emitterutils.lo `test -f 'emitterutils.cpp' || echo '$(srcdir)/'`emitterutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterutils.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterutils.Plo
#	$(AM_V_CXX)source='emitterutils.cpp' object='liblhapdf_yaml_cpp_la-emitterutils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-emitterutils.lo `test -f 'emitterutils.cpp' || echo '$(srcdir)/'`emitterutils.cpp

liblhapdf_yaml_cpp_la-ostream.lo: ostream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-ostream.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-ostream.Tpo -c -o liblhapdf_yaml_cpp_la-ostream.lo `test -f 'ostream.cpp' || echo '$(srcdir)/'`ostream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-ostream.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-ostream.Plo
#	$(AM_V_CXX)source='ostream.cpp' object='liblhapdf_yaml_cpp_la-ostream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-ostream.lo `test -f 'ostream.cpp' || echo '$(srcdir)/'`ostream.cpp

liblhapdf_yaml_cpp_la-simplekey.lo: simplekey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-simplekey.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-simplekey.Tpo -c -o liblhapdf_yaml_cpp_la-simplekey.lo `test -f 'simplekey.cpp' || echo '$(srcdir)/'`simplekey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-simplekey.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-simplekey.Plo
#	$(AM_V_CXX)source='simplekey.cpp' object='liblhapdf_yaml_cpp_la-simplekey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-simplekey.lo `test -f 'simplekey.cpp' || echo '$(srcdir)/'`simplekey.cpp

liblhapdf_yaml_cpp_la-binary.lo: binary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-binary.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-binary.Tpo -c -o liblhapdf_yaml_cpp_la-binary.lo `test -f 'binary.cpp' || echo '$(srcdir)/'`binary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-binary.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-binary.Plo
#	$(AM_V_CXX)source='binary.cpp' object='liblhapdf_yaml_cpp_la-binary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-binary.lo `test -f 'binary.cpp' || echo '$(srcdir)/'`binary.cpp

liblhapdf_yaml_cpp_la-exp.lo: exp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-exp.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-exp.Tpo -c -o liblhapdf_yaml_cpp_la-exp.lo `test -f 'exp.cpp' || echo '$(srcdir)/'`exp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-exp.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-exp.Plo
#	$(AM_V_CXX)source='exp.cpp' object='liblhapdf_yaml_cpp_la-exp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-exp.lo `test -f 'exp.cpp' || echo '$(srcdir)/'`exp.cpp

liblhapdf_yaml_cpp_la-parser.lo: parser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-parser.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-parser.Tpo -c -o liblhapdf_yaml_cpp_la-parser.lo `test -f 'parser.cpp' || echo '$(srcdir)/'`parser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-parser.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-parser.Plo
#	$(AM_V_CXX)source='parser.cpp' object='liblhapdf_yaml_cpp_la-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-parser.lo `test -f 'parser.cpp' || echo '$(srcdir)/'`parser.cpp

liblhapdf_yaml_cpp_la-singledocparser.lo: singledocparser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-singledocparser.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-singledocparser.Tpo -c -o liblhapdf_yaml_cpp_la-singledocparser.lo `test -f 'singledocparser.cpp' || echo '$(srcdir)/'`singledocparser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-singledocparser.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-singledocparser.Plo
#	$(AM_V_CXX)source='singledocparser.cpp' object='liblhapdf_yaml_cpp_la-singledocparser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-singledocparser.lo `test -f 'singledocparser.cpp' || echo '$(srcdir)/'`singledocparser.cpp

liblhapdf_yaml_cpp_la-conversion.lo: conversion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-conversion.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-conversion.Tpo -c -o liblhapdf_yaml_cpp_la-conversion.lo `test -f 'conversion.cpp' || echo '$(srcdir)/'`conversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-conversion.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-conversion.Plo
#	$(AM_V_CXX)source='conversion.cpp' object='liblhapdf_yaml_cpp_la-conversion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-conversion.lo `test -f 'conversion.cpp' || echo '$(srcdir)/'`conversion.cpp

liblhapdf_yaml_cpp_la-iterator.lo: iterator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-iterator.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-iterator.Tpo -c -o liblhapdf_yaml_cpp_la-iterator.lo `test -f 'iterator.cpp' || echo '$(srcdir)/'`iterator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-iterator.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-iterator.Plo
#	$(AM_V_CXX)source='iterator.cpp' object='liblhapdf_yaml_cpp_la-iterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-iterator.lo `test -f 'iterator.cpp' || echo '$(srcdir)/'`iterator.cpp

liblhapdf_yaml_cpp_la-regex.lo: regex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-regex.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-regex.Tpo -c -o liblhapdf_yaml_cpp_la-regex.lo `test -f 'regex.cpp' || echo '$(srcdir)/'`regex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-regex.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-regex.Plo
#	$(AM_V_CXX)source='regex.cpp' object='liblhapdf_yaml_cpp_la-regex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-regex.lo `test -f 'regex.cpp' || echo '$(srcdir)/'`regex.cpp

liblhapdf_yaml_cpp_la-stream.lo: stream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-stream.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-stream.Tpo -c -o liblhapdf_yaml_cpp_la-stream.lo `test -f 'stream.cpp' || echo '$(srcdir)/'`stream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-stream.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-stream.Plo
#	$(AM_V_CXX)source='stream.cpp' object='liblhapdf_yaml_cpp_la-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-stream.lo `test -f 'stream.cpp' || echo '$(srcdir)/'`stream.cpp

liblhapdf_yaml_cpp_la-directives.lo: directives.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-directives.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-directives.Tpo -c -o liblhapdf_yaml_cpp_la-directives.lo `test -f 'directives.cpp' || echo '$(srcdir)/'`directives.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-directives.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-directives.Plo
#	$(AM_V_CXX)source='directives.cpp' object='liblhapdf_yaml_cpp_la-directives.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-directives.lo `test -f 'directives.cpp' || echo '$(srcdir)/'`directives.cpp

liblhapdf_yaml_cpp_la-nodebuilder.lo: nodebuilder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-nodebuilder.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-nodebuilder.Tpo -c -o liblhapdf_yaml_cpp_la-nodebuilder.lo `test -f 'nodebuilder.cpp' || echo '$(srcdir)/'`nodebuilder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-nodebuilder.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-nodebuilder.Plo
#	$(AM_V_CXX)source='nodebuilder.cpp' object='liblhapdf_yaml_cpp_la-nodebuilder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-nodebuilder.lo `test -f 'nodebuilder.cpp' || echo '$(srcdir)/'`nodebuilder.cpp

liblhapdf_yaml_cpp_la-scanner.lo: scanner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-scanner.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-scanner.Tpo -c -o liblhapdf_yaml_cpp_la-scanner.lo `test -f 'scanner.cpp' || echo '$(srcdir)/'`scanner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-scanner.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-scanner.Plo
#	$(AM_V_CXX)source='scanner.cpp' object='liblhapdf_yaml_cpp_la-scanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-scanner.lo `test -f 'scanner.cpp' || echo '$(srcdir)/'`scanner.cpp

liblhapdf_yaml_cpp_la-tag.lo: tag.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-tag.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-tag.Tpo -c -o liblhapdf_yaml_cpp_la-tag.lo `test -f 'tag.cpp' || echo '$(srcdir)/'`tag.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-tag.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-tag.Plo
#	$(AM_V_CXX)source='tag.cpp' object='liblhapdf_yaml_cpp_la-tag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-tag.lo `test -f 'tag.cpp' || echo '$(srcdir)/'`tag.cpp

liblhapdf_yaml_cpp_la-emitfromevents.lo: emitfromevents.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-emitfromevents.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-emitfromevents.Tpo -c -o liblhapdf_yaml_cpp_la-emitfromevents.lo `test -f 'emitfromevents.cpp' || echo '$(srcdir)/'`emitfromevents.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-emitfromevents.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-emitfromevents.Plo
#	$(AM_V_CXX)source='emitfromevents.cpp' object='liblhapdf_yaml_cpp_la-emitfromevents.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-emitfromevents.lo `test -f 'emitfromevents.cpp' || echo '$(srcdir)/'`emitfromevents.cpp

liblhapdf_yaml_cpp_la-node.lo: node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-node.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-node.Tpo -c -o liblhapdf_yaml_cpp_la-node.lo `test -f 'node.cpp' || echo '$(srcdir)/'`node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-node.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-node.Plo
#	$(AM_V_CXX)source='node.cpp' object='liblhapdf_yaml_cpp_la-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-node.lo `test -f 'node.cpp' || echo '$(srcdir)/'`node.cpp

liblhapdf_yaml_cpp_la-scanscalar.lo: scanscalar.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-scanscalar.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-scanscalar.Tpo -c -o liblhapdf_yaml_cpp_la-scanscalar.lo `test -f 'scanscalar.cpp' || echo '$(srcdir)/'`scanscalar.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-scanscalar.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-scanscalar.Plo
#	$(AM_V_CXX)source='scanscalar.cpp' object='liblhapdf_yaml_cpp_la-scanscalar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-scanscalar.lo `test -f 'scanscalar.cpp' || echo '$(srcdir)/'`scanscalar.cpp

liblhapdf_yaml_cpp_la-emitter.lo: emitter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-emitter.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-emitter.Tpo -c -o liblhapdf_yaml_cpp_la-emitter.lo `test -f 'emitter.cpp' || echo '$(srcdir)/'`emitter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-emitter.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-emitter.Plo
#	$(AM_V_CXX)source='emitter.cpp' object='liblhapdf_yaml_cpp_la-emitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-emitter.lo `test -f 'emitter.cpp' || echo '$(srcdir)/'`emitter.cpp

liblhapdf_yaml_cpp_la-nodeownership.lo: nodeownership.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-nodeownership.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-nodeownership.Tpo -c -o liblhapdf_yaml_cpp_la-nodeownership.lo `test -f 'nodeownership.cpp' || echo '$(srcdir)/'`nodeownership.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-nodeownership.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-nodeownership.Plo
#	$(AM_V_CXX)source='nodeownership.cpp' object='liblhapdf_yaml_cpp_la-nodeownership.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-nodeownership.lo `test -f 'nodeownership.cpp' || echo '$(srcdir)/'`nodeownership.cpp

liblhapdf_yaml_cpp_la-scantag.lo: scantag.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-scantag.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-scantag.Tpo -c -o liblhapdf_yaml_cpp_la-scantag.lo `test -f 'scantag.cpp' || echo '$(srcdir)/'`scantag.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-scantag.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-scantag.Plo
#	$(AM_V_CXX)source='scantag.cpp' object='liblhapdf_yaml_cpp_la-scantag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-scantag.lo `test -f 'scantag.cpp' || echo '$(srcdir)/'`scantag.cpp

liblhapdf_yaml_cpp_la-emitterstate.lo: emitterstate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-emitterstate.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterstate.Tpo -c -o liblhapdf_yaml_cpp_la-emitterstate.lo `test -f 'emitterstate.cpp' || echo '$(srcdir)/'`emitterstate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterstate.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-emitterstate.Plo
#	$(AM_V_CXX)source='emitterstate.cpp' object='liblhapdf_yaml_cpp_la-emitterstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-emitterstate.lo `test -f 'emitterstate.cpp' || echo '$(srcdir)/'`emitterstate.cpp

liblhapdf_yaml_cpp_la-null.lo: null.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-null.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-null.Tpo -c -o liblhapdf_yaml_cpp_la-null.lo `test -f 'null.cpp' || echo '$(srcdir)/'`null.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-null.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-null.Plo
#	$(AM_V_CXX)source='null.cpp' object='liblhapdf_yaml_cpp_la-null.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-null.lo `test -f 'null.cpp' || echo '$(srcdir)/'`null.cpp

liblhapdf_yaml_cpp_la-scantoken.lo: scantoken.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liblhapdf_yaml_cpp_la-scantoken.lo -MD -MP -MF $(DEPDIR)/liblhapdf_yaml_cpp_la-scantoken.Tpo -c -o liblhapdf_yaml_cpp_la-scantoken.lo `test -f 'scantoken.cpp' || echo '$(srcdir)/'`scantoken.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblhapdf_yaml_cpp_la-scantoken.Tpo $(DEPDIR)/liblhapdf_yaml_cpp_la-scantoken.Plo
#	$(AM_V_CXX)source='scantoken.cpp' object='liblhapdf_yaml_cpp_la-scantoken.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblhapdf_yaml_cpp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liblhapdf_yaml_cpp_la-scantoken.lo `test -f 'scantoken.cpp' || echo '$(srcdir)/'`scantoken.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
